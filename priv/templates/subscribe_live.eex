@moduledoc """
A live view to handle paddle checkout.

Generated by Embers task add_paddle_subscribers
"""

use <%= inspect(@web_module) %>, :live_view

alias Embers.Paddle

alias <%= inspect(@module_prefix) %>.Customers
alias <%= inspect(@module_prefix) %>.Subscriptions

def mount(%{"price_id" => price_id}, _session, socket) do
  socket =
    socket
    |> assign(:load_paddle, true)
    |> assign(:paddle_client_token, Paddle.client_token())
    |> assign(:paddle_env, Paddle.environment())

  with {:ok, user} <- ensure_current_user(socket),
       {:ok, customer} <- Customers.get_or_create_customer_for_user(user),
       :ok <- ensure_no_active_subscription(socket, customer) do
    items = [%{priceId: price_id, quantity: 1}]

    params = %{
      items: items,
      customer: %{id: customer.id},
      success_url: url(~p"/pricing")
    }

    {:ok, socket |> push_event("checkout", params)}
  end
end

defp ensure_current_user(%{assigns: %{current_user: user}} = socket) do
  if !is_nil(user) do
    {:ok, user}
  else
    # User is not logged in
    {:ok, socket |> push_navigate(to: ~p"/users/log_in?return_to=/pricing")}
  end
end

defp ensure_no_active_subscription(socket, customer) do
  case Paddle.list_subscriptions(customer_id: customer.id, status: "active,trialing") do
    {:ok, []} ->
      :ok

    {:ok, subscription} ->
      # If we got here it means that the user had an active subscription that we don't know about.
      # Add it to the DB

      {:ok, _sub} = Subscriptions.create_subscription(subscription)

      {:ok,
       socket
       |> put_flash(:info, "You already have an active subscription")
       |> push_navigate(to: ~p"/")}
  end
end

def render(assigns) do
  ~H"""
  <div
    id="checkout-container"
    class="relative isolate overflow-hidden bg-white"
    phx-hook="PaddleCheckout"
    data-client_token={@paddle_client_token}
    data-environment={@paddle_env}
  >
    <div class="mx-auto max-w-7xl px-6 pb-24 pt-10 sm:pb-32 lg:px-8 lg:py-32 text-center">
      <p>Loading checkout screen...</p>
    </div>
  </div>
  """
end
